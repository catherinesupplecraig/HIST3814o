options(java.parameters = "-Xmx5120m")
install.packages('rJava')
library(rJava)
from http://cran.r-project.org/web/packages/mallet/mallet.pdf
install.packages('mallet')
library(mallet)
give yourself as much memory as you've got
#install.packages('RCurl')
library(RCurl)
x <- getURL("https://raw.githubusercontent.com/shawngraham/exercise/gh-pages/CND.csv",
#on a mac, the final bit of that line beginning with .opts was not necessary
documents <- read.csv(text = x, col.names=c("Article_ID", "Newspaper Title", "Newspaper City", "Newspaper Province", "Newspaper Country", "Year", "Month", "Day", "Article Type", "Text", "Keywords"), colClasses=rep("character", 3), sep=",", quote="")
x <- getURL("https://raw.githubusercontent.com/shawngraham/exercise/gh-pages/CND.csv",
documents <- read.csv(text = x, col.names=c("Article_ID", "Newspaper Title", "Newspaper City", "Newspaper Province", "Newspaper Country", "Year", "Month", "Day", "Article Type", "Text", "Keywords"), colClasses=rep("character", 3), sep=",", quote="")
x <- getURL("https://raw.githubusercontent.com/shawngraham/exercise/gh-pages/CND.csv",
documents <- read.csv(text = x, col.names=c("Article_ID", "Newspaper Title", "Newspaper City", "Newspaper Province", "Newspaper Country", "Year", "Month", "Day", "Article Type", "Text", "Keywords"), colClasses=rep("character", 3), sep=",", quote="")
s
x <- getURL("https://raw.githubusercontent.com/shawngraham/exercise/gh-pages/CND.csv", .opts = list(ssl.verifypeer = FALSE))
documents <- read.csv(text = x, col.names=c("Article_ID", "Newspaper Title", "Newspaper City", "Newspaper Province", "Newspaper Country", "Year", "Month", "Day", "Article Type", "Text", "Keywords"), colClasses=rep("character", 3), sep=",", quote="")
counts <- table(documents$Newspaper.City)
barplot(counts, main="Cities", xlab="Number of Articles")
years <- table(documents$Year)
barplot(years, main="Publication Year", xlab="Year", ylab="Number of Articles")
mallet.instances <- mallet.import(documents$Article_ID, documents$Text, "C:\Mallet\stoplists\en.txt", token.regexp = "\p{L}[\p{L}\p{P}]+\p{L}")
mallet.instances <- mallet.import(documents$Article_ID, documents$Text, "C:\Mallet\stoplists\en.txt", token.regexp = "\p{L}[\p{L}\p{P}]+\p{L}")
mallet.instances <- mallet.import(documents$Article_ID, documents$Text, "C:\\Mallet\\stoplists\\en.txt", token.regexp = "\\p{L}[\\p{L}\\p{P}]+\\p{L}")
mallet.instances <- mallet.import(documents$Article_ID, documents$Text, "C:\\Mallet\\jockersstoplist.txt", token.regexp = "\\p{L}[\\p{L}\\p{P}]+\\p{L}")
mallet.instances <- mallet.import(documents$Article_ID, documents$Text, "C:\\Mallet\\jockersstoplist", token.regexp = "\\p{L}[\\p{L}\\p{P}]+\\p{L}")
mallet.instances <- mallet.import(documents$Article_ID, documents$Text, “jockersstoplist.txt", token.regexp = "\\p{L}[\\p{L}\\p{P}]+\\p{L}")
mallet.instances <- mallet.import (documents$Article_ID, documents$Text, “jockersstoplist.txt", token.regexp = "\\p{L}[\\p{L}\\p{P}]+\\p{L}")
mallet.instances <- mallet.import(documents$Article_ID, documents$Text, jockersstoplist.txt", token.regexp = "\\p{L}[\\p{L}\\p{P}]+\\p{L}")
mallet.instances <- mallet.import(documents$Article_ID,documents$Text,”jockersstoplist.txt",token.regexp="\\p{L}[\\p{L}\\p{P}]+\\p{L}")
mallet.instances <- mallet.import((documents$Article_ID,documents$Text)”jockersstoplist.txt",token.regexp="\\p{L}[\\p{L}\\p{P}]+\\p{L}")
mallet.instances <- mallet.import((documents$Article_ID,documents$Text)”jockersstoplist.txt”,"token.regexp="\\p{L}[\\p{L}\\p{P}]+\\p{L}")
mallet.instances <- mallet.import(documents$Article_ID,documents$Text=“jockersstoplist.txt”,token.regexp="\\p{L}[\\p{L}\\p{P}]+\\p{L}")
mallet.instances <- mallet.import(documents$Article_ID,documents$Text,“jockersstoplist.txt”,token.regexp="\\p{L}[\\p{L}\\p{P}]+\\p{L}")
mallet.instances <- mallet.import("documents$Article_ID,documents$Text,"jockersstoplist.txt",token.regexp="\\p{L}[\\p{L}\\p{P}]+\\p{L}")
mallet.instances <- mallet.import(“documents,Article_ID,documents,Text,"jockersstoplist.txt",token.regexp="\\p{L}[\\p{L}\\p{P}]+\\p{L}")
mallet.instances <- mallet.import(documents,Article_ID,documents,Text,"jockersstoplist.txt",token.regexp="\\p{L}[\\p{L}\\p{P}]+\\p{L}")
mallet.import
library(mallet)
library(rJava)
library(mallet)
x <- getURL("https://raw.githubusercontent.com/shawngraham/exercise/gh-pages/CND.csv"
x <- getURL("https://raw.githubusercontent.com/shawngraham/exercise/gh-pages/CND.csv", .opts = list(ssl.verifypeer = FALSE))
library(RCurl)
x <- getURL("https://raw.githubusercontent.com/shawngraham/exercise/gh-pages/CND.csv", .opts = list(ssl.verifypeer = FALSE))
documents <- read.csv(text = x, col.names=c("Article_ID", "Newspaper Title", "Newspaper City", "Newspaper Province", "Newspaper Country", "Year", "Month", "Day", "Article Type", "Text", "Keywords"), colClasses=rep("character", 3), sep=",", quote="")
counts <- table(documents$Newspaper.City)
barplot(counts, main="Cities", xlab="Number of Articles")
years <- table(documents$Year)
barplot(years, main="Publication Year", xlab="Year", ylab="Number of Articles")
mallet.instances <- mallet.import(documents$Article_ID, documents$Text,"jockersstoplist.txt",token.regexp="\\p{L}[\\p{L}\\p{P}]+\\p{L}")
num.topics <- 50
topic.model <- MalletLDA(num.topics)
topic.model$loadDocuments(mallet.instances)
vocabulary <- topic.model$getVocabulary()
word.freqs <- mallet.word.freqs(topic.model)
head(word.freqs)
write.csv(word.freqs, "cnd-word-freqs.csv" )
topic.model$setAlphaOptimization(20, 50)
topic.model$train(1000)
topic.model$maximize(10)
doc.topics <- mallet.doc.topics(topic.model, smoothed=T, normalized=T)
topic.words <- mallet.topic.words(topic.model, smoothed=T, normalized=T)
mallet.top.words(topic.model, topic.words[7,])
topic.docs <- t(doc.topics)
topic.docs <- topic.docs / rowSums(topic.docs)
write.csv(topic.docs, "cnd-topics-docs.csv" )
topics.labels <- rep("", num.topics)
for (topic in 1:num.topics) topics.labels[topic] <- paste(mallet.top.words(topic.model, topic.words[topic,], num.top.words=5)$words, collapse=" ")
topics.labels
write.csv(topics.labels, "cnd-topics-labels.csv")
library(wordcloud)
library (worldcloud)
install.packages("wordcloud")
install.packages("RColorBrewer")
library(wordcloud)
for(i in 1:num.topics){
topic.top.words <- mallet.top.words(topic.model,
topic.words[i,], 25)
print(wordcloud(topic.top.words$words,
topic.top.words$weights,
c(4,.8), rot.per=0,
random.order=F))
install.packages("Rcpp")
save.image("~/Desktop/Beals/August4.RData")
savehistory("~/Desktop/Beals/August4Hist.Rhistory")
